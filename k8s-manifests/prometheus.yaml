---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  - configmaps
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics", "/metrics/cadvisor"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
apiVersion: v1
data:
  prometheus.yaml: "global:\n  scrape_interval: 30s\n  scrape_timeout: 10s\nalerting:\n
    \ alertmanagers:\n  - kubernetes_sd_configs:\n    - role: endpoints\n      namespaces:\n
    \       names:\n        - default\n    scheme: http\n    path_prefix: /\n    timeout:
    10s\n    relabel_configs:\n    - source_labels: [__meta_kubernetes_namespace,
    __meta_kubernetes_service_label_app]\n      separator: ;\n      regex: default;alertmanager\n
    \     replacement: $1\n      action: keep\n    - source_labels: [__meta_kubernetes_endpoint_port_name]\n
    \     separator: ;\n      regex: http\n      replacement: $1\n      action: keep\nrule_files:\n-
    /etc/prometheus/prometheus_rules.yaml\n- /etc/prometheus/prometheus_alerts.yaml\nscrape_configs:\n#-------------
    configuration to collect pods metrics -------------------\n- job_name: 'kubernetes-pods'\n
    \ honor_labels: true\n  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n
    \ # select only those pods that has \"prometheus.io/scrape: true\" annotation\n
    \ - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n    action:
    keep\n    regex: true\n  # set metrics_path (default is /metrics) to the metrics
    path specified in \"prometheus.io/path: <metric path>\" annotation.\n  - source_labels:
    [__meta_kubernetes_pod_annotation_prometheus_io_path]\n    action: replace\n    target_label:
    __metrics_path__\n    regex: (.+)\n  # set the scrapping port to the port specified
    in \"prometheus.io/port: <port>\" annotation and set address accordingly.\n  -
    source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n
    \   action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n
    \   target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n
    \ - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label:
    kubernetes_namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n    action:
    replace\n    target_label: kubernetes_pod_name\n\n#-------------- configuration
    to collect metrics from service endpoints -----------------------\n- job_name:
    'kubernetes-service-endpoints'\n  honor_labels: true\n  kubernetes_sd_configs:\n
    \ - role: endpoints\n  relabel_configs:\n  # select only those endpoints whose
    service has \"prometheus.io/scrape: true\" annotation\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n
    \   action: keep\n    regex: true\n  # set the metrics_path to the path specified
    in \"prometheus.io/path: <metric path>\" annotation.\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n
    \   action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n  #
    set the scrapping port to the port specified in \"prometheus.io/port: <port>\"
    annotation and set address accordingly.\n  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n
    \   action: replace\n    target_label: __address__\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n
    \   replacement: $1:$2\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n
    \ - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label:
    kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n    action:
    replace\n    target_label: kubernetes_name\n\n#---------------- configuration
    to collect metrics from kubernetes apiserver -------------------------\n- job_name:
    'kubernetes-apiservers'\n  honor_labels: true\n  kubernetes_sd_configs:\n  - role:
    endpoints\n  # kubernetes apiserver serve metrics on a TLS secure endpoints. so,
    we have to use \"https\" scheme\n  scheme: https\n  # we have to provide certificate
    to establish tls secure connection\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n
    \ #  bearer_token_file is required for authorizating prometheus server to kubernetes
    apiserver\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n
    \ relabel_configs:\n  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name,
    __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: default;kubernetes;https\n\n#---------------
    configuration to collect metrics from nodes -----------------------\n- job_name:
    'kubernetes-nodes'\n  honor_labels: true\n  scheme: https\n  tls_config:\n    ca_file:
    /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n
    \ kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n
    \   regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n
    \   replacement: kubernetes.default.svc:443\n  - source_labels: [__meta_kubernetes_node_name]\n
    \   regex: (.+)\n    target_label: __metrics_path__\n    replacement: /api/v1/nodes/${1}/proxy/metrics\n#---------------
    configuration to collect metrics from redis-exporter -----------------------\n-
    job_name: redis-exporter\n  static_configs:\n    - targets: ['redis:9121']\n#---------------
    configuration to collect metrics from nodejs-server -----------------------\n-
    job_name: nodejs-server\n  static_configs:\n    - targets: ['nodeapp:8080']\n#---------------
    configuration to collect metrics from nodeexporter -----------------------\n-
    job_name: 'node-exporter'\n  kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n
    \ - source_labels: [__meta_kubernetes_endpoints_name]\n    regex: 'node-exporter'\n
    \   action: keep\n#--------------- configuration to collect metrics from cadvisor
    -----------------------\n- job_name: cadvisor\n  honor_timestamps: true\n  scrape_interval:
    15s\n  scrape_timeout: 10s\n  metrics_path: /metrics\n  scheme: https\n  bearer_token_file:
    /var/run/secrets/kubernetes.io/serviceaccount/token\n  tls_config:\n    ca_file:
    /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    insecure_skip_verify:
    true\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - separator:
    ;\n    regex: __meta_kubernetes_node_label_(.+)\n    replacement: $1\n    action:
    labelmap\n  - source_labels: [__address__]\n    separator: ;\n    regex: ([^:]+)(?::\\d+)?\n
    \   target_label: __address__\n    replacement: $1:10250\n    action: replace\n
    \ - separator: ;\n    regex: (.*)\n    target_label: __metrics_path__\n    replacement:
    /metrics/cadvisor\n    action: replace\n  metric_relabel_configs:\n  - source_labels:
    [namespace]\n    separator: ;\n    regex: ^$\n    replacement: $1\n    action:
    drop\n  - source_labels: [pod_name]\n    separator: ;\n    regex: ^$\n    replacement:
    $1\n    action: drop\n#--------------- configuration to collect metrics from kube-state-metrics
    -----------------------\n- job_name: kube-state-metrics\n  honor_timestamps: true\n
    \ scrape_interval: 15s\n  scrape_timeout: 10s\n  metrics_path: /metrics\n  scheme:
    http\n  kubernetes_sd_configs:\n  - role: service\n  relabel_configs:\n  - separator:
    ;\n    regex: __meta_kubernetes_service_label_(.+)\n    replacement: $1\n    action:
    labelmap\n  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_label_app]\n
    \   separator: ;\n    regex: default;kube-state-metrics\n    replacement: $1\n
    \   action: keep\n#--------------- configuration to collect metrics from kubelet
    -----------------------\n- job_name: kubelet\n  honor_timestamps: true\n  scrape_interval:
    15s\n  scrape_timeout: 10s\n  metrics_path: /metrics\n  scheme: https\n  bearer_token_file:
    /var/run/secrets/kubernetes.io/serviceaccount/token\n  tls_config:\n    ca_file:
    /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    insecure_skip_verify:
    true\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - separator:
    ;\n    regex: __meta_kubernetes_node_label_(.+)\n    replacement: $1\n    action:
    labelmap\n  - source_labels: [__address__]\n    separator: ;\n    regex: ([^:]+)(?::\\d+)?\n
    \   target_label: __address__\n    replacement: $1:10250\n    action: replace
    \  \n#--------------- configuration to collect data from alert manager -----------------------\n-
    job_name: alertmanager\n  honor_timestamps: true\n  scrape_interval: 15s\n  scrape_timeout:
    10s\n  metrics_path: /metrics\n  scheme: http\n  kubernetes_sd_configs:\n  - role:
    endpoints\n  relabel_configs:\n  - separator: ;\n    regex: __meta_kubernetes_service_label_(.+)\n
    \   replacement: $1\n    action: labelmap\n  - source_labels: [__address__]\n
    \   separator: ;\n    regex: ([^:]+)(?::\\d+)?\n    target_label: __address__\n
    \   replacement: $1:9093\n    action: replace\n  - source_labels: [__meta_kubernetes_namespace,
    __meta_kubernetes_service_label_app]\n    separator: ;\n    regex: default;alertmanager\n
    \   replacement: $1\n    action: keep\n  - source_labels: [__meta_kubernetes_namespace]\n
    \   separator: ;\n    regex: (.*)\n    target_label: namespace\n    replacement:
    $1\n    action: replace\n  - source_labels: [__meta_kubernetes_pod_name]\n    separator:
    ;\n    regex: (.*)\n    target_label: pod\n    replacement: $1\n    action: replace"
  prometheus_alerts.yaml: |
    "groups":
    - "name": "kubernetes-apps"
      "rules":
      - "alert": "KubePodCrashLooping"
        "annotations":
          "description": "Pod {{ $labels.namespace }}/{{ $labels.pod }} ({{ $labels.container }}) is restarting {{ printf \"%.2f\" $value }} times / 5 minutes."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepodcrashlooping"
          "summary": "Pod is crash looping."
        "expr": |
          rate(kube_pod_container_status_restarts_total{job="kube-state-metrics"}[5m]) * 60 * 5 > 0
        "for": "15m"
        "labels":
          "severity": "warning"
      - "alert": "KubePodNotReady"
        "annotations":
          "description": "Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-ready state for longer than 15 minutes."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepodnotready"
          "summary": "Pod has been in a non-ready state for more than 15 minutes."
        "expr": |
          sum by (namespace, pod) (
            max by(namespace, pod) (
              kube_pod_status_phase{job="kube-state-metrics", phase=~"Pending|Unknown"}
            ) * on(namespace, pod) group_left(owner_kind) topk by(namespace, pod) (
              1, max by(namespace, pod, owner_kind) (kube_pod_owner{owner_kind!="Job"})
            )
          ) > 0
        "for": "15m"
        "labels":
          "severity": "warning"
      - "alert": "KubeDeploymentGenerationMismatch"
        "annotations":
          "description": "Deployment generation for {{ $labels.namespace }}/{{ $labels.deployment }} does not match, this indicates that the Deployment has failed but has not been rolled back."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentgenerationmismatch"
          "summary": "Deployment generation mismatch due to possible roll-back"
        "expr": |
          kube_deployment_status_observed_generation{job="kube-state-metrics"}
            !=
          kube_deployment_metadata_generation{job="kube-state-metrics"}
        "for": "15m"
        "labels":
          "severity": "warning"
      - "alert": "KubeDeploymentReplicasMismatch"
        "annotations":
          "description": "Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has not matched the expected number of replicas for longer than 15 minutes."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentreplicasmismatch"
          "summary": "Deployment has not matched the expected number of replicas."
        "expr": |
          (
            kube_deployment_spec_replicas{job="kube-state-metrics"}
              !=
            kube_deployment_status_replicas_available{job="kube-state-metrics"}
          ) and (
            changes(kube_deployment_status_replicas_updated{job="kube-state-metrics"}[5m])
              ==
            0
          )
        "for": "15m"
        "labels":
          "severity": "warning"
      - "alert": "KubeStatefulSetReplicasMismatch"
        "annotations":
          "description": "StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} has not matched the expected number of replicas for longer than 15 minutes."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetreplicasmismatch"
          "summary": "Deployment has not matched the expected number of replicas."
        "expr": |
          (
            kube_statefulset_status_replicas_ready{job="kube-state-metrics"}
              !=
            kube_statefulset_status_replicas{job="kube-state-metrics"}
          ) and (
            changes(kube_statefulset_status_replicas_updated{job="kube-state-metrics"}[5m])
              ==
            0
          )
        "for": "15m"
        "labels":
          "severity": "warning"
      - "alert": "KubeStatefulSetGenerationMismatch"
        "annotations":
          "description": "StatefulSet generation for {{ $labels.namespace }}/{{ $labels.statefulset }} does not match, this indicates that the StatefulSet has failed but has not been rolled back."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetgenerationmismatch"
          "summary": "StatefulSet generation mismatch due to possible roll-back"
        "expr": |
          kube_statefulset_status_observed_generation{job="kube-state-metrics"}
            !=
          kube_statefulset_metadata_generation{job="kube-state-metrics"}
        "for": "15m"
        "labels":
          "severity": "warning"
      - "alert": "KubeStatefulSetUpdateNotRolledOut"
        "annotations":
          "description": "StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} update has not been rolled out."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetupdatenotrolledout"
          "summary": "StatefulSet update has not been rolled out."
        "expr": |
          (
            max without (revision) (
              kube_statefulset_status_current_revision{job="kube-state-metrics"}
                unless
              kube_statefulset_status_update_revision{job="kube-state-metrics"}
            )
              *
            (
              kube_statefulset_replicas{job="kube-state-metrics"}
                !=
              kube_statefulset_status_replicas_updated{job="kube-state-metrics"}
            )
          )  and (
            changes(kube_statefulset_status_replicas_updated{job="kube-state-metrics"}[5m])
              ==
            0
          )
        "for": "15m"
        "labels":
          "severity": "warning"
      - "alert": "KubeDaemonSetRolloutStuck"
        "annotations":
          "description": "DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} has not finished or progressed for at least 15 minutes."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetrolloutstuck"
          "summary": "DaemonSet rollout is stuck."
        "expr": |
          (
            (
              kube_daemonset_status_current_number_scheduled{job="kube-state-metrics"}
               !=
              kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"}
            ) or (
              kube_daemonset_status_number_misscheduled{job="kube-state-metrics"}
               !=
              0
            ) or (
              kube_daemonset_updated_number_scheduled{job="kube-state-metrics"}
               !=
              kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"}
            ) or (
              kube_daemonset_status_number_available{job="kube-state-metrics"}
               !=
              kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"}
            )
          ) and (
            changes(kube_daemonset_updated_number_scheduled{job="kube-state-metrics"}[5m])
              ==
            0
          )
        "for": "15m"
        "labels":
          "severity": "warning"
      - "alert": "KubeContainerWaiting"
        "annotations":
          "description": "Pod {{ $labels.namespace }}/{{ $labels.pod }} container {{ $labels.container}} has been in waiting state for longer than 1 hour."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecontainerwaiting"
          "summary": "Pod container waiting longer than 1 hour"
        "expr": |
          sum by (namespace, pod, container) (kube_pod_container_status_waiting_reason{job="kube-state-metrics"}) > 0
        "for": "1h"
        "labels":
          "severity": "warning"
      - "alert": "KubeDaemonSetNotScheduled"
        "annotations":
          "description": "{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are not scheduled."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetnotscheduled"
          "summary": "DaemonSet pods are not scheduled."
        "expr": |
          kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"}
            -
          kube_daemonset_status_current_number_scheduled{job="kube-state-metrics"} > 0
        "for": "10m"
        "labels":
          "severity": "warning"
      - "alert": "KubeDaemonSetMisScheduled"
        "annotations":
          "description": "{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are running where they are not supposed to run."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetmisscheduled"
          "summary": "DaemonSet pods are misscheduled."
        "expr": |
          kube_daemonset_status_number_misscheduled{job="kube-state-metrics"} > 0
        "for": "15m"
        "labels":
          "severity": "warning"
      - "alert": "KubeJobCompletion"
        "annotations":
          "description": "Job {{ $labels.namespace }}/{{ $labels.job_name }} is taking more than 12 hours to complete."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubejobcompletion"
          "summary": "Job did not complete in time"
        "expr": |
          kube_job_spec_completions{job="kube-state-metrics"} - kube_job_status_succeeded{job="kube-state-metrics"}  > 0
        "for": "12h"
        "labels":
          "severity": "warning"
      - "alert": "KubeJobFailed"
        "annotations":
          "description": "Job {{ $labels.namespace }}/{{ $labels.job_name }} failed to complete. Removing failed job after investigation should clear this alert."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubejobfailed"
          "summary": "Job failed to complete."
        "expr": |
          kube_job_failed{job="kube-state-metrics"}  > 0
        "for": "15m"
        "labels":
          "severity": "warning"
      - "alert": "KubeHpaReplicasMismatch"
        "annotations":
          "description": "HPA {{ $labels.namespace }}/{{ $labels.hpa }} has not matched the desired number of replicas for longer than 15 minutes."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubehpareplicasmismatch"
          "summary": "HPA has not matched descired number of replicas."
        "expr": |
          (kube_hpa_status_desired_replicas{job="kube-state-metrics"}
            !=
          kube_hpa_status_current_replicas{job="kube-state-metrics"})
            and
          (kube_hpa_status_current_replicas{job="kube-state-metrics"}
            >
          kube_hpa_spec_min_replicas{job="kube-state-metrics"})
            and
          (kube_hpa_status_current_replicas{job="kube-state-metrics"}
            <
          kube_hpa_spec_max_replicas{job="kube-state-metrics"})
            and
          changes(kube_hpa_status_current_replicas[15m]) == 0
        "for": "15m"
        "labels":
          "severity": "warning"
      - "alert": "KubeHpaMaxedOut"
        "annotations":
          "description": "HPA {{ $labels.namespace }}/{{ $labels.hpa }} has been running at max replicas for longer than 15 minutes."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubehpamaxedout"
          "summary": "HPA is running at max replicas"
        "expr": |
          kube_hpa_status_current_replicas{job="kube-state-metrics"}
            ==
          kube_hpa_spec_max_replicas{job="kube-state-metrics"}
        "for": "15m"
        "labels":
          "severity": "warning"
    - "name": "kubernetes-resources"
      "rules":
      - "alert": "KubeCPUOvercommit"
        "annotations":
          "description": "Cluster has overcommitted CPU resource requests for Pods and cannot tolerate node failure."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuovercommit"
          "summary": "Cluster has overcommitted CPU resource requests."
        "expr": |
          sum(namespace:kube_pod_container_resource_requests_cpu_cores:sum{})
            /
          sum(kube_node_status_allocatable_cpu_cores)
            >
          (count(kube_node_status_allocatable_cpu_cores)-1) / count(kube_node_status_allocatable_cpu_cores)
        "for": "5m"
        "labels":
          "severity": "warning"
      - "alert": "KubeMemoryOvercommit"
        "annotations":
          "description": "Cluster has overcommitted memory resource requests for Pods and cannot tolerate node failure."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryovercommit"
          "summary": "Cluster has overcommitted memory resource requests."
        "expr": |
          sum(namespace:kube_pod_container_resource_requests_memory_bytes:sum{})
            /
          sum(kube_node_status_allocatable_memory_bytes)
            >
          (count(kube_node_status_allocatable_memory_bytes)-1)
            /
          count(kube_node_status_allocatable_memory_bytes)
        "for": "5m"
        "labels":
          "severity": "warning"
      - "alert": "KubeCPUQuotaOvercommit"
        "annotations":
          "description": "Cluster has overcommitted CPU resource requests for Namespaces."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuquotaovercommit"
          "summary": "Cluster has overcommitted CPU resource requests."
        "expr": |
          sum(kube_resourcequota{job="kube-state-metrics", type="hard", resource="cpu"})
            /
          sum(kube_node_status_allocatable_cpu_cores)
            > 1.5
        "for": "5m"
        "labels":
          "severity": "warning"
      - "alert": "KubeMemoryQuotaOvercommit"
        "annotations":
          "description": "Cluster has overcommitted memory resource requests for Namespaces."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryquotaovercommit"
          "summary": "Cluster has overcommitted memory resource requests."
        "expr": |
          sum(kube_resourcequota{job="kube-state-metrics", type="hard", resource="memory"})
            /
          sum(kube_node_status_allocatable_memory_bytes{job="kube-state-metrics"})
            > 1.5
        "for": "5m"
        "labels":
          "severity": "warning"
      - "alert": "KubeQuotaAlmostFull"
        "annotations":
          "description": "Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaalmostfull"
          "summary": "Namespace quota is going to be full."
        "expr": |
          kube_resourcequota{job="kube-state-metrics", type="used"}
            / ignoring(instance, job, type)
          (kube_resourcequota{job="kube-state-metrics", type="hard"} > 0)
            > 0.9 < 1
        "for": "15m"
        "labels":
          "severity": "info"
      - "alert": "KubeQuotaFullyUsed"
        "annotations":
          "description": "Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotafullyused"
          "summary": "Namespace quota is fully used."
        "expr": |
          kube_resourcequota{job="kube-state-metrics", type="used"}
            / ignoring(instance, job, type)
          (kube_resourcequota{job="kube-state-metrics", type="hard"} > 0)
            == 1
        "for": "15m"
        "labels":
          "severity": "info"
      - "alert": "KubeQuotaExceeded"
        "annotations":
          "description": "Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaexceeded"
          "summary": "Namespace quota has exceeded the limits."
        "expr": |
          kube_resourcequota{job="kube-state-metrics", type="used"}
            / ignoring(instance, job, type)
          (kube_resourcequota{job="kube-state-metrics", type="hard"} > 0)
            > 1
        "for": "15m"
        "labels":
          "severity": "warning"
      - "alert": "CPUThrottlingHigh"
        "annotations":
          "description": "{{ $value | humanizePercentage }} throttling of CPU in namespace {{ $labels.namespace }} for container {{ $labels.container }} in pod {{ $labels.pod }}."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-cputhrottlinghigh"
          "summary": "Processes experience elevated CPU throttling."
        "expr": |
          sum(increase(container_cpu_cfs_throttled_periods_total{container!="", }[5m])) by (container, pod, namespace)
            /
          sum(increase(container_cpu_cfs_periods_total{}[5m])) by (container, pod, namespace)
            > ( 25 / 100 )
        "for": "15m"
        "labels":
          "severity": "info"
    - "name": "kubernetes-storage"
      "rules":
      - "alert": "KubePersistentVolumeFillingUp"
        "annotations":
          "description": "The PersistentVolume claimed by {{ $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} is only {{ $value | humanizePercentage }} free."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumefillingup"
          "summary": "PersistentVolume is filling up."
        "expr": |
          kubelet_volume_stats_available_bytes{job="kubelet"}
            /
          kubelet_volume_stats_capacity_bytes{job="kubelet"}
            < 0.03
        "for": "1m"
        "labels":
          "severity": "critical"
      - "alert": "KubePersistentVolumeFillingUp"
        "annotations":
          "description": "Based on recent sampling, the PersistentVolume claimed by {{ $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} is expected to fill up within four days. Currently {{ $value | humanizePercentage }} is available."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumefillingup"
          "summary": "PersistentVolume is filling up."
        "expr": |
          (
            kubelet_volume_stats_available_bytes{job="kubelet"}
              /
            kubelet_volume_stats_capacity_bytes{job="kubelet"}
          ) < 0.15
          and
          predict_linear(kubelet_volume_stats_available_bytes{job="kubelet"}[6h], 4 * 24 * 3600) < 0
        "for": "1h"
        "labels":
          "severity": "warning"
      - "alert": "KubePersistentVolumeErrors"
        "annotations":
          "description": "The persistent volume {{ $labels.persistentvolume }} has status {{ $labels.phase }}."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumeerrors"
          "summary": "PersistentVolume is having issues with provisioning."
        "expr": |
          kube_persistentvolume_status_phase{phase=~"Failed|Pending",job="kube-state-metrics"} > 0
        "for": "5m"
        "labels":
          "severity": "critical"
    - "name": "kubernetes-system"
      "rules":
      - "alert": "KubeVersionMismatch"
        "annotations":
          "description": "There are {{ $value }} different semantic versions of Kubernetes components running."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeversionmismatch"
          "summary": "Different semantic versions of Kubernetes components running."
        "expr": |
          count(count by (gitVersion) (label_replace(kubernetes_build_info{job!~"kube-dns|coredns"},"gitVersion","$1","gitVersion","(v[0-9]*.[0-9]*).*"))) > 1
        "for": "15m"
        "labels":
          "severity": "warning"
      - "alert": "KubeClientErrors"
        "annotations":
          "description": "Kubernetes API server client '{{ $labels.job }}/{{ $labels.instance }}' is experiencing {{ $value | humanizePercentage }} errors.'"
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclienterrors"
          "summary": "Kubernetes API server client is experiencing errors."
        "expr": |
          (sum(rate(rest_client_requests_total{code=~"5.."}[5m])) by (instance, job)
            /
          sum(rate(rest_client_requests_total[5m])) by (instance, job))
          > 0.01
        "for": "15m"
        "labels":
          "severity": "warning"
    - "name": "kube-apiserver-slos"
      "rules":
      - "alert": "KubeAPIErrorBudgetBurn"
        "annotations":
          "description": "The API server is burning too much error budget."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn"
          "summary": "The API server is burning too much error budget."
        "expr": |
          sum(apiserver_request:burnrate1h) > (14.40 * 0.01000)
          and
          sum(apiserver_request:burnrate5m) > (14.40 * 0.01000)
        "for": "2m"
        "labels":
          "long": "1h"
          "severity": "critical"
          "short": "5m"
      - "alert": "KubeAPIErrorBudgetBurn"
        "annotations":
          "description": "The API server is burning too much error budget."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn"
          "summary": "The API server is burning too much error budget."
        "expr": |
          sum(apiserver_request:burnrate6h) > (6.00 * 0.01000)
          and
          sum(apiserver_request:burnrate30m) > (6.00 * 0.01000)
        "for": "15m"
        "labels":
          "long": "6h"
          "severity": "critical"
          "short": "30m"
      - "alert": "KubeAPIErrorBudgetBurn"
        "annotations":
          "description": "The API server is burning too much error budget."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn"
          "summary": "The API server is burning too much error budget."
        "expr": |
          sum(apiserver_request:burnrate1d) > (3.00 * 0.01000)
          and
          sum(apiserver_request:burnrate2h) > (3.00 * 0.01000)
        "for": "1h"
        "labels":
          "long": "1d"
          "severity": "warning"
          "short": "2h"
      - "alert": "KubeAPIErrorBudgetBurn"
        "annotations":
          "description": "The API server is burning too much error budget."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn"
          "summary": "The API server is burning too much error budget."
        "expr": |
          sum(apiserver_request:burnrate3d) > (1.00 * 0.01000)
          and
          sum(apiserver_request:burnrate6h) > (1.00 * 0.01000)
        "for": "3h"
        "labels":
          "long": "3d"
          "severity": "warning"
          "short": "6h"
    - "name": "kubernetes-system-apiserver"
      "rules":
      - "alert": "KubeClientCertificateExpiration"
        "annotations":
          "description": "A client certificate used to authenticate to the apiserver is expiring in less than 7.0 days."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclientcertificateexpiration"
          "summary": "Client certificate is about to expire."
        "expr": |
          apiserver_client_certificate_expiration_seconds_count{job="kube-apiserver"} > 0 and on(job) histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="kube-apiserver"}[5m]))) < 604800
        "labels":
          "severity": "warning"
      - "alert": "KubeClientCertificateExpiration"
        "annotations":
          "description": "A client certificate used to authenticate to the apiserver is expiring in less than 24.0 hours."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclientcertificateexpiration"
          "summary": "Client certificate is about to expire."
        "expr": |
          apiserver_client_certificate_expiration_seconds_count{job="kube-apiserver"} > 0 and on(job) histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="kube-apiserver"}[5m]))) < 86400
        "labels":
          "severity": "critical"
      - "alert": "AggregatedAPIErrors"
        "annotations":
          "description": "An aggregated API {{ $labels.name }}/{{ $labels.namespace }} has reported errors. The number of errors have increased for it in the past five minutes. High values indicate that the availability of the service changes too often."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-aggregatedapierrors"
          "summary": "An aggregated API has reported errors."
        "expr": |
          sum by(name, namespace)(increase(aggregator_unavailable_apiservice_count[5m])) > 2
        "labels":
          "severity": "warning"
      - "alert": "AggregatedAPIDown"
        "annotations":
          "description": "An aggregated API {{ $labels.name }}/{{ $labels.namespace }} has been only {{ $value | humanize }}% available over the last 10m."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-aggregatedapidown"
          "summary": "An aggregated API is down."
        "expr": |
          (1 - max by(name, namespace)(avg_over_time(aggregator_unavailable_apiservice[10m]))) * 100 < 85
        "for": "5m"
        "labels":
          "severity": "warning"
      - "alert": "KubeAPIDown"
        "annotations":
          "description": "KubeAPI has disappeared from Prometheus target discovery."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapidown"
          "summary": "Target disappeared from Prometheus target discovery."
        "expr": |
          absent(up{job="kube-apiserver"} == 1)
        "for": "15m"
        "labels":
          "severity": "critical"
    - "name": "kubernetes-system-kubelet"
      "rules":
      - "alert": "KubeNodeNotReady"
        "annotations":
          "description": "{{ $labels.node }} has been unready for more than 15 minutes."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodenotready"
          "summary": "Node is not ready."
        "expr": |
          kube_node_status_condition{job="kube-state-metrics",condition="Ready",status="true"} == 0
        "for": "15m"
        "labels":
          "severity": "warning"
      - "alert": "KubeNodeUnreachable"
        "annotations":
          "description": "{{ $labels.node }} is unreachable and some workloads may be rescheduled."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodeunreachable"
          "summary": "Node is unreachable."
        "expr": |
          (kube_node_spec_taint{job="kube-state-metrics",key="node.kubernetes.io/unreachable",effect="NoSchedule"} unless ignoring(key,value) kube_node_spec_taint{job="kube-state-metrics",key=~"ToBeDeletedByClusterAutoscaler|cloud.google.com/impending-node-termination|aws-node-termination-handler/spot-itn"}) == 1
        "for": "15m"
        "labels":
          "severity": "warning"
      - "alert": "KubeletTooManyPods"
        "annotations":
          "description": "Kubelet '{{ $labels.node }}' is running at {{ $value | humanizePercentage }} of its Pod capacity."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubelettoomanypods"
          "summary": "Kubelet is running at capacity."
        "expr": |
          count by(node) (
            (kube_pod_status_phase{job="kube-state-metrics",phase="Running"} == 1) * on(instance,pod,namespace,cluster) group_left(node) topk by(instance,pod,namespace,cluster) (1, kube_pod_info{job="kube-state-metrics"})
          )
          /
          max by(node) (
            kube_node_status_capacity_pods{job="kube-state-metrics"} != 1
          ) > 0.95
        "for": "15m"
        "labels":
          "severity": "warning"
      - "alert": "KubeNodeReadinessFlapping"
        "annotations":
          "description": "The readiness status of node {{ $labels.node }} has changed {{ $value }} times in the last 15 minutes."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodereadinessflapping"
          "summary": "Node readiness status is flapping."
        "expr": |
          sum(changes(kube_node_status_condition{status="true",condition="Ready"}[15m])) by (node) > 2
        "for": "15m"
        "labels":
          "severity": "warning"
      - "alert": "KubeletPlegDurationHigh"
        "annotations":
          "description": "The Kubelet Pod Lifecycle Event Generator has a 99th percentile duration of {{ $value }} seconds on node {{ $labels.node }}."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletplegdurationhigh"
          "summary": "Kubelet Pod Lifecycle Event Generator is taking too long to relist."
        "expr": |
          node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile{quantile="0.99"} >= 10
        "for": "5m"
        "labels":
          "severity": "warning"
      - "alert": "KubeletPodStartUpLatencyHigh"
        "annotations":
          "description": "Kubelet Pod startup 99th percentile latency is {{ $value }} seconds on node {{ $labels.node }}."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletpodstartuplatencyhigh"
          "summary": "Kubelet Pod startup latency is too high."
        "expr": |
          histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{job="kubelet"}[5m])) by (instance, le)) * on(instance) group_left(node) kubelet_node_name{job="kubelet"} > 60
        "for": "15m"
        "labels":
          "severity": "warning"
      - "alert": "KubeletClientCertificateExpiration"
        "annotations":
          "description": "Client certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificateexpiration"
          "summary": "Kubelet client certificate is about to expire."
        "expr": |
          kubelet_certificate_manager_client_ttl_seconds < 604800
        "labels":
          "severity": "warning"
      - "alert": "KubeletClientCertificateExpiration"
        "annotations":
          "description": "Client certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificateexpiration"
          "summary": "Kubelet client certificate is about to expire."
        "expr": |
          kubelet_certificate_manager_client_ttl_seconds < 86400
        "labels":
          "severity": "critical"
      - "alert": "KubeletServerCertificateExpiration"
        "annotations":
          "description": "Server certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificateexpiration"
          "summary": "Kubelet server certificate is about to expire."
        "expr": |
          kubelet_certificate_manager_server_ttl_seconds < 604800
        "labels":
          "severity": "warning"
      - "alert": "KubeletServerCertificateExpiration"
        "annotations":
          "description": "Server certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificateexpiration"
          "summary": "Kubelet server certificate is about to expire."
        "expr": |
          kubelet_certificate_manager_server_ttl_seconds < 86400
        "labels":
          "severity": "critical"
      - "alert": "KubeletClientCertificateRenewalErrors"
        "annotations":
          "description": "Kubelet on node {{ $labels.node }} has failed to renew its client certificate ({{ $value | humanize }} errors in the last 5 minutes)."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificaterenewalerrors"
          "summary": "Kubelet has failed to renew its client certificate."
        "expr": |
          increase(kubelet_certificate_manager_client_expiration_renew_errors[5m]) > 0
        "for": "15m"
        "labels":
          "severity": "warning"
      - "alert": "KubeletServerCertificateRenewalErrors"
        "annotations":
          "description": "Kubelet on node {{ $labels.node }} has failed to renew its server certificate ({{ $value | humanize }} errors in the last 5 minutes)."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificaterenewalerrors"
          "summary": "Kubelet has failed to renew its server certificate."
        "expr": |
          increase(kubelet_server_expiration_renew_errors[5m]) > 0
        "for": "15m"
        "labels":
          "severity": "warning"
      - "alert": "KubeletDown"
        "annotations":
          "description": "Kubelet has disappeared from Prometheus target discovery."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletdown"
          "summary": "Target disappeared from Prometheus target discovery."
        "expr": |
          absent(up{job="kubelet"} == 1)
        "for": "15m"
        "labels":
          "severity": "critical"
    - "name": "kubernetes-system-scheduler"
      "rules":
      - "alert": "KubeSchedulerDown"
        "annotations":
          "description": "KubeScheduler has disappeared from Prometheus target discovery."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeschedulerdown"
          "summary": "Target disappeared from Prometheus target discovery."
        "expr": |
          absent(up{job="kube-scheduler"} == 1)
        "for": "15m"
        "labels":
          "severity": "critical"
    - "name": "kubernetes-system-controller-manager"
      "rules":
      - "alert": "KubeControllerManagerDown"
        "annotations":
          "description": "KubeControllerManager has disappeared from Prometheus target discovery."
          "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecontrollermanagerdown"
          "summary": "Target disappeared from Prometheus target discovery."
        "expr": |
          absent(up{job="kube-controller-manager"} == 1)
        "for": "15m"
        "labels":
          "severity": "critical"
  prometheus_rules.yaml: |
    "groups":
    - "name": "kube-apiserver.rules"
      "rules":
      - "expr": |
          (
            (
              # too slow
              sum(rate(apiserver_request_duration_seconds_count{job="kube-apiserver",verb=~"LIST|GET"}[1d]))
              -
              (
                (
                  sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[1d]))
                  or
                  vector(0)
                )
                +
                sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope="namespace",le="0.5"}[1d]))
                +
                sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope="cluster",le="5"}[1d]))
              )
            )
            +
            # errors
            sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"LIST|GET",code=~"5.."}[1d]))
          )
          /
          sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"LIST|GET"}[1d]))
        "labels":
          "verb": "read"
        "record": "apiserver_request:burnrate1d"
      - "expr": |
          (
            (
              # too slow
              sum(rate(apiserver_request_duration_seconds_count{job="kube-apiserver",verb=~"LIST|GET"}[1h]))
              -
              (
                (
                  sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[1h]))
                  or
                  vector(0)
                )
                +
                sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope="namespace",le="0.5"}[1h]))
                +
                sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope="cluster",le="5"}[1h]))
              )
            )
            +
            # errors
            sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"LIST|GET",code=~"5.."}[1h]))
          )
          /
          sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"LIST|GET"}[1h]))
        "labels":
          "verb": "read"
        "record": "apiserver_request:burnrate1h"
      - "expr": |
          (
            (
              # too slow
              sum(rate(apiserver_request_duration_seconds_count{job="kube-apiserver",verb=~"LIST|GET"}[2h]))
              -
              (
                (
                  sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[2h]))
                  or
                  vector(0)
                )
                +
                sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope="namespace",le="0.5"}[2h]))
                +
                sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope="cluster",le="5"}[2h]))
              )
            )
            +
            # errors
            sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"LIST|GET",code=~"5.."}[2h]))
          )
          /
          sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"LIST|GET"}[2h]))
        "labels":
          "verb": "read"
        "record": "apiserver_request:burnrate2h"
      - "expr": |
          (
            (
              # too slow
              sum(rate(apiserver_request_duration_seconds_count{job="kube-apiserver",verb=~"LIST|GET"}[30m]))
              -
              (
                (
                  sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[30m]))
                  or
                  vector(0)
                )
                +
                sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope="namespace",le="0.5"}[30m]))
                +
                sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope="cluster",le="5"}[30m]))
              )
            )
            +
            # errors
            sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"LIST|GET",code=~"5.."}[30m]))
          )
          /
          sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"LIST|GET"}[30m]))
        "labels":
          "verb": "read"
        "record": "apiserver_request:burnrate30m"
      - "expr": |
          (
            (
              # too slow
              sum(rate(apiserver_request_duration_seconds_count{job="kube-apiserver",verb=~"LIST|GET"}[3d]))
              -
              (
                (
                  sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[3d]))
                  or
                  vector(0)
                )
                +
                sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope="namespace",le="0.5"}[3d]))
                +
                sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope="cluster",le="5"}[3d]))
              )
            )
            +
            # errors
            sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"LIST|GET",code=~"5.."}[3d]))
          )
          /
          sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"LIST|GET"}[3d]))
        "labels":
          "verb": "read"
        "record": "apiserver_request:burnrate3d"
      - "expr": |
          (
            (
              # too slow
              sum(rate(apiserver_request_duration_seconds_count{job="kube-apiserver",verb=~"LIST|GET"}[5m]))
              -
              (
                (
                  sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[5m]))
                  or
                  vector(0)
                )
                +
                sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope="namespace",le="0.5"}[5m]))
                +
                sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope="cluster",le="5"}[5m]))
              )
            )
            +
            # errors
            sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"LIST|GET",code=~"5.."}[5m]))
          )
          /
          sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"LIST|GET"}[5m]))
        "labels":
          "verb": "read"
        "record": "apiserver_request:burnrate5m"
      - "expr": |
          (
            (
              # too slow
              sum(rate(apiserver_request_duration_seconds_count{job="kube-apiserver",verb=~"LIST|GET"}[6h]))
              -
              (
                (
                  sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[6h]))
                  or
                  vector(0)
                )
                +
                sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope="namespace",le="0.5"}[6h]))
                +
                sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope="cluster",le="5"}[6h]))
              )
            )
            +
            # errors
            sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"LIST|GET",code=~"5.."}[6h]))
          )
          /
          sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"LIST|GET"}[6h]))
        "labels":
          "verb": "read"
        "record": "apiserver_request:burnrate6h"
      - "expr": |
          (
            (
              # too slow
              sum(rate(apiserver_request_duration_seconds_count{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE"}[1d]))
              -
              sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE",le="1"}[1d]))
            )
            +
            sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[1d]))
          )
          /
          sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE"}[1d]))
        "labels":
          "verb": "write"
        "record": "apiserver_request:burnrate1d"
      - "expr": |
          (
            (
              # too slow
              sum(rate(apiserver_request_duration_seconds_count{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE"}[1h]))
              -
              sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE",le="1"}[1h]))
            )
            +
            sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[1h]))
          )
          /
          sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE"}[1h]))
        "labels":
          "verb": "write"
        "record": "apiserver_request:burnrate1h"
      - "expr": |
          (
            (
              # too slow
              sum(rate(apiserver_request_duration_seconds_count{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE"}[2h]))
              -
              sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE",le="1"}[2h]))
            )
            +
            sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[2h]))
          )
          /
          sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE"}[2h]))
        "labels":
          "verb": "write"
        "record": "apiserver_request:burnrate2h"
      - "expr": |
          (
            (
              # too slow
              sum(rate(apiserver_request_duration_seconds_count{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE"}[30m]))
              -
              sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE",le="1"}[30m]))
            )
            +
            sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[30m]))
          )
          /
          sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE"}[30m]))
        "labels":
          "verb": "write"
        "record": "apiserver_request:burnrate30m"
      - "expr": |
          (
            (
              # too slow
              sum(rate(apiserver_request_duration_seconds_count{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE"}[3d]))
              -
              sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE",le="1"}[3d]))
            )
            +
            sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[3d]))
          )
          /
          sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE"}[3d]))
        "labels":
          "verb": "write"
        "record": "apiserver_request:burnrate3d"
      - "expr": |
          (
            (
              # too slow
              sum(rate(apiserver_request_duration_seconds_count{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
              -
              sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE",le="1"}[5m]))
            )
            +
            sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[5m]))
          )
          /
          sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
        "labels":
          "verb": "write"
        "record": "apiserver_request:burnrate5m"
      - "expr": |
          (
            (
              # too slow
              sum(rate(apiserver_request_duration_seconds_count{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE"}[6h]))
              -
              sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE",le="1"}[6h]))
            )
            +
            sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[6h]))
          )
          /
          sum(rate(apiserver_request_total{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE"}[6h]))
        "labels":
          "verb": "write"
        "record": "apiserver_request:burnrate6h"
      - "expr": |
          sum by (code,resource) (rate(apiserver_request_total{job="kube-apiserver",verb=~"LIST|GET"}[5m]))
        "labels":
          "verb": "read"
        "record": "code_resource:apiserver_request_total:rate5m"
      - "expr": |
          sum by (code,resource) (rate(apiserver_request_total{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
        "labels":
          "verb": "write"
        "record": "code_resource:apiserver_request_total:rate5m"
      - "expr": |
          histogram_quantile(0.99, sum by (le, resource) (rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET"}[5m]))) > 0
        "labels":
          "quantile": "0.99"
          "verb": "read"
        "record": "cluster_quantile:apiserver_request_duration_seconds:histogram_quantile"
      - "expr": |
          histogram_quantile(0.99, sum by (le, resource) (rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"POST|PUT|PATCH|DELETE"}[5m]))) > 0
        "labels":
          "quantile": "0.99"
          "verb": "write"
        "record": "cluster_quantile:apiserver_request_duration_seconds:histogram_quantile"
      - "expr": |
          sum(rate(apiserver_request_duration_seconds_sum{subresource!="log",verb!~"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT"}[5m])) without(instance, pod)
          /
          sum(rate(apiserver_request_duration_seconds_count{subresource!="log",verb!~"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT"}[5m])) without(instance, pod)
        "record": "cluster:apiserver_request_duration_seconds:mean5m"
      - "expr": |
          histogram_quantile(0.99, sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",subresource!="log",verb!~"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT"}[5m])) without(instance, pod))
        "labels":
          "quantile": "0.99"
        "record": "cluster_quantile:apiserver_request_duration_seconds:histogram_quantile"
      - "expr": |
          histogram_quantile(0.9, sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",subresource!="log",verb!~"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT"}[5m])) without(instance, pod))
        "labels":
          "quantile": "0.9"
        "record": "cluster_quantile:apiserver_request_duration_seconds:histogram_quantile"
      - "expr": |
          histogram_quantile(0.5, sum(rate(apiserver_request_duration_seconds_bucket{job="kube-apiserver",subresource!="log",verb!~"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT"}[5m])) without(instance, pod))
        "labels":
          "quantile": "0.5"
        "record": "cluster_quantile:apiserver_request_duration_seconds:histogram_quantile"
    - "interval": "3m"
      "name": "kube-apiserver-availability.rules"
      "rules":
      - "expr": |
          1 - (
            (
              # write too slow
              sum(increase(apiserver_request_duration_seconds_count{verb=~"POST|PUT|PATCH|DELETE"}[30d]))
              -
              sum(increase(apiserver_request_duration_seconds_bucket{verb=~"POST|PUT|PATCH|DELETE",le="1"}[30d]))
            ) +
            (
              # read too slow
              sum(increase(apiserver_request_duration_seconds_count{verb=~"LIST|GET"}[30d]))
              -
              (
                (
                  sum(increase(apiserver_request_duration_seconds_bucket{verb=~"LIST|GET",scope=~"resource|",le="0.1"}[30d]))
                  or
                  vector(0)
                )
                +
                sum(increase(apiserver_request_duration_seconds_bucket{verb=~"LIST|GET",scope="namespace",le="0.5"}[30d]))
                +
                sum(increase(apiserver_request_duration_seconds_bucket{verb=~"LIST|GET",scope="cluster",le="5"}[30d]))
              )
            ) +
            # errors
            sum(code:apiserver_request_total:increase30d{code=~"5.."} or vector(0))
          )
          /
          sum(code:apiserver_request_total:increase30d)
        "labels":
          "verb": "all"
        "record": "apiserver_request:availability30d"
      - "expr": |
          1 - (
            sum(increase(apiserver_request_duration_seconds_count{job="kube-apiserver",verb=~"LIST|GET"}[30d]))
            -
            (
              # too slow
              (
                sum(increase(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[30d]))
                or
                vector(0)
              )
              +
              sum(increase(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope="namespace",le="0.5"}[30d]))
              +
              sum(increase(apiserver_request_duration_seconds_bucket{job="kube-apiserver",verb=~"LIST|GET",scope="cluster",le="5"}[30d]))
            )
            +
            # errors
            sum(code:apiserver_request_total:increase30d{verb="read",code=~"5.."} or vector(0))
          )
          /
          sum(code:apiserver_request_total:increase30d{verb="read"})
        "labels":
          "verb": "read"
        "record": "apiserver_request:availability30d"
      - "expr": |
          1 - (
            (
              # too slow
              sum(increase(apiserver_request_duration_seconds_count{verb=~"POST|PUT|PATCH|DELETE"}[30d]))
              -
              sum(increase(apiserver_request_duration_seconds_bucket{verb=~"POST|PUT|PATCH|DELETE",le="1"}[30d]))
            )
            +
            # errors
            sum(code:apiserver_request_total:increase30d{verb="write",code=~"5.."} or vector(0))
          )
          /
          sum(code:apiserver_request_total:increase30d{verb="write"})
        "labels":
          "verb": "write"
        "record": "apiserver_request:availability30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="LIST",code=~"2.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="GET",code=~"2.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="POST",code=~"2.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="PUT",code=~"2.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="PATCH",code=~"2.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="DELETE",code=~"2.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="LIST",code=~"3.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="GET",code=~"3.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="POST",code=~"3.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="PUT",code=~"3.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="PATCH",code=~"3.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="DELETE",code=~"3.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="LIST",code=~"4.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="GET",code=~"4.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="POST",code=~"4.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="PUT",code=~"4.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="PATCH",code=~"4.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="DELETE",code=~"4.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="LIST",code=~"5.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="GET",code=~"5.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="POST",code=~"5.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="PUT",code=~"5.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="PATCH",code=~"5.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code, verb) (increase(apiserver_request_total{job="kube-apiserver",verb="DELETE",code=~"5.."}[30d]))
        "record": "code_verb:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code) (code_verb:apiserver_request_total:increase30d{verb=~"LIST|GET"})
        "labels":
          "verb": "read"
        "record": "code:apiserver_request_total:increase30d"
      - "expr": |
          sum by (code) (code_verb:apiserver_request_total:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
        "labels":
          "verb": "write"
        "record": "code:apiserver_request_total:increase30d"
    - "name": "k8s.rules"
      "rules":
      - "expr": |
          sum(rate(container_cpu_usage_seconds_total{job="cadvisor", image!="", container!="POD"}[5m])) by (namespace)
        "record": "namespace:container_cpu_usage_seconds_total:sum_rate"
      - "expr": |
          sum by (cluster, namespace, pod, container) (
            rate(container_cpu_usage_seconds_total{job="cadvisor", image!="", container!="POD"}[5m])
          ) * on (cluster, namespace, pod) group_left(node) topk by (cluster, namespace, pod) (
            1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
          )
        "record": "node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate"
      - "expr": |
          container_memory_working_set_bytes{job="cadvisor", image!=""}
          * on (namespace, pod) group_left(node) topk by(namespace, pod) (1,
            max by(namespace, pod, node) (kube_pod_info{node!=""})
          )
        "record": "node_namespace_pod_container:container_memory_working_set_bytes"
      - "expr": |
          container_memory_rss{job="cadvisor", image!=""}
          * on (namespace, pod) group_left(node) topk by(namespace, pod) (1,
            max by(namespace, pod, node) (kube_pod_info{node!=""})
          )
        "record": "node_namespace_pod_container:container_memory_rss"
      - "expr": |
          container_memory_cache{job="cadvisor", image!=""}
          * on (namespace, pod) group_left(node) topk by(namespace, pod) (1,
            max by(namespace, pod, node) (kube_pod_info{node!=""})
          )
        "record": "node_namespace_pod_container:container_memory_cache"
      - "expr": |
          container_memory_swap{job="cadvisor", image!=""}
          * on (namespace, pod) group_left(node) topk by(namespace, pod) (1,
            max by(namespace, pod, node) (kube_pod_info{node!=""})
          )
        "record": "node_namespace_pod_container:container_memory_swap"
      - "expr": |
          sum(container_memory_usage_bytes{job="cadvisor", image!="", container!="POD"}) by (namespace)
        "record": "namespace:container_memory_usage_bytes:sum"
      - "expr": |
          sum by (namespace) (
              sum by (namespace, pod) (
                  max by (namespace, pod, container) (
                      kube_pod_container_resource_requests_memory_bytes{job="kube-state-metrics"}
                  ) * on(namespace, pod) group_left() max by (namespace, pod) (
                      kube_pod_status_phase{phase=~"Pending|Running"} == 1
                  )
              )
          )
        "record": "namespace:kube_pod_container_resource_requests_memory_bytes:sum"
      - "expr": |
          sum by (namespace) (
              sum by (namespace, pod) (
                  max by (namespace, pod, container) (
                      kube_pod_container_resource_requests_cpu_cores{job="kube-state-metrics"}
                  ) * on(namespace, pod) group_left() max by (namespace, pod) (
                    kube_pod_status_phase{phase=~"Pending|Running"} == 1
                  )
              )
          )
        "record": "namespace:kube_pod_container_resource_requests_cpu_cores:sum"
      - "expr": |
          max by (cluster, namespace, workload, pod) (
            label_replace(
              label_replace(
                kube_pod_owner{job="kube-state-metrics", owner_kind="ReplicaSet"},
                "replicaset", "$1", "owner_name", "(.*)"
              ) * on(replicaset, namespace) group_left(owner_name) topk by(replicaset, namespace) (
                1, max by (replicaset, namespace, owner_name) (
                  kube_replicaset_owner{job="kube-state-metrics"}
                )
              ),
              "workload", "$1", "owner_name", "(.*)"
            )
          )
        "labels":
          "workload_type": "deployment"
        "record": "namespace_workload_pod:kube_pod_owner:relabel"
      - "expr": |
          max by (cluster, namespace, workload, pod) (
            label_replace(
              kube_pod_owner{job="kube-state-metrics", owner_kind="DaemonSet"},
              "workload", "$1", "owner_name", "(.*)"
            )
          )
        "labels":
          "workload_type": "daemonset"
        "record": "namespace_workload_pod:kube_pod_owner:relabel"
      - "expr": |
          max by (cluster, namespace, workload, pod) (
            label_replace(
              kube_pod_owner{job="kube-state-metrics", owner_kind="StatefulSet"},
              "workload", "$1", "owner_name", "(.*)"
            )
          )
        "labels":
          "workload_type": "statefulset"
        "record": "namespace_workload_pod:kube_pod_owner:relabel"
    - "name": "kube-scheduler.rules"
      "rules":
      - "expr": |
          histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
        "labels":
          "quantile": "0.99"
        "record": "cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile"
      - "expr": |
          histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
        "labels":
          "quantile": "0.99"
        "record": "cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile"
      - "expr": |
          histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
        "labels":
          "quantile": "0.99"
        "record": "cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile"
      - "expr": |
          histogram_quantile(0.9, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
        "labels":
          "quantile": "0.9"
        "record": "cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile"
      - "expr": |
          histogram_quantile(0.9, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
        "labels":
          "quantile": "0.9"
        "record": "cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile"
      - "expr": |
          histogram_quantile(0.9, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
        "labels":
          "quantile": "0.9"
        "record": "cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile"
      - "expr": |
          histogram_quantile(0.5, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
        "labels":
          "quantile": "0.5"
        "record": "cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile"
      - "expr": |
          histogram_quantile(0.5, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
        "labels":
          "quantile": "0.5"
        "record": "cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile"
      - "expr": |
          histogram_quantile(0.5, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
        "labels":
          "quantile": "0.5"
        "record": "cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile"
    - "name": "node.rules"
      "rules":
      - "expr": |
          sum(min(kube_pod_info{node!=""}) by (cluster, node))
        "record": ":kube_pod_info_node_count:"
      - "expr": |
          topk by(namespace, pod) (1,
            max by (node, namespace, pod) (
              label_replace(kube_pod_info{job="kube-state-metrics",node!=""}, "pod", "$1", "pod", "(.*)")
          ))
        "record": "node_namespace_pod:kube_pod_info:"
      - "expr": |
          count by (cluster, node) (sum by (node, cpu) (
            node_cpu_seconds_total{job="node-exporter"}
          * on (namespace, pod) group_left(node)
            node_namespace_pod:kube_pod_info:
          ))
        "record": "node:node_num_cpu:sum"
      - "expr": |
          sum(
            node_memory_MemAvailable_bytes{job="node-exporter"} or
            (
              node_memory_Buffers_bytes{job="node-exporter"} +
              node_memory_Cached_bytes{job="node-exporter"} +
              node_memory_MemFree_bytes{job="node-exporter"} +
              node_memory_Slab_bytes{job="node-exporter"}
            )
          ) by (cluster)
        "record": ":node_memory_MemAvailable_bytes:sum"
    - "name": "kubelet.rules"
      "rules":
      - "expr": |
          histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_duration_seconds_bucket[5m])) by (instance, le) * on(instance) group_left(node) kubelet_node_name{job="kubelet"})
        "labels":
          "quantile": "0.99"
        "record": "node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile"
      - "expr": |
          histogram_quantile(0.9, sum(rate(kubelet_pleg_relist_duration_seconds_bucket[5m])) by (instance, le) * on(instance) group_left(node) kubelet_node_name{job="kubelet"})
        "labels":
          "quantile": "0.9"
        "record": "node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile"
      - "expr": |
          histogram_quantile(0.5, sum(rate(kubelet_pleg_relist_duration_seconds_bucket[5m])) by (instance, le) * on(instance) group_left(node) kubelet_node_name{job="kubelet"})
        "labels":
          "quantile": "0.5"
        "record": "node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile"
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: prometheus-server-conf
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port:   '9090'
spec:
  selector:
    app: prometheus-server
  type: NodePort
  ports:
    - port: 8080
      targetPort: 9090
      nodePort: 30000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  labels:
    app: prometheus-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-server
  template:
    metadata:
      labels:
        app: prometheus-server
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          args:
            - "--config.file=/etc/prometheus/prometheus.yaml"
            - "--storage.tsdb.path=/prometheus/"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-server-conf

        - name: prometheus-storage-volume
          emptyDir: {}